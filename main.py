import os
import discord
from discord.ext import commands, tasks
from discord import app_commands
from datetime import datetime, timedelta

from myserver import server_on

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î prefix ‡πÅ‡∏•‡∏∞ intents
intents = discord.Intents.default()
intents.message_content = True  # ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ bot ‡∏≠‡πà‡∏≤‡∏ô message ‡πÑ‡∏î‡πâ
bot = commands.Bot(command_prefix='!', intents=intents)

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏™‡∏ñ‡∏≤‡∏ß‡∏£
boss_timers = []
broadcast_channels = {}
boss_alert_channels = {}  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå

# ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™
boss_list = {
    1: "‡∏ä‡∏±‡πâ‡∏ô‡∏•‡πà‡∏≤‡∏á ‡πÇ‡∏Æ‡∏ó‡∏π‡∏£‡πà‡∏≤ (Hotura)",
    2: "‡∏ñ‡πâ‡∏≥ 7 ‡∏ó‡∏¥‡∏Å‡∏î‡∏±‡∏•‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡πà‡∏á (Cave 7)",
    3: "‡∏ñ‡πâ‡∏≥ 8 ‡∏Å‡∏±‡∏ó‡∏ü‡∏¥‡∏•‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏£‡πâ‡∏≤‡∏¢ (Cave 8)",
    4: "‡∏ñ‡πâ‡∏≥ 9 ‡πÅ‡∏û‡∏ô‡πÄ‡∏î‡∏≠‡πÄ‡∏£‡∏õ‡∏•‡∏∏‡∏Å‡∏û‡∏•‡∏±‡∏á (Cave 9)",
    5: "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà 2 ‡∏Æ‡∏≤‡∏Ñ‡∏µ‡∏£‡πå (Rcave 2)",
    6: "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà 3 ‡∏î‡∏≤‡∏°‡∏¥‡πÇ‡∏£‡∏™ (Rcave 3)",
    7: "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà 4 ‡∏Ñ‡∏≤‡∏ü‡∏Ñ‡∏≤ (Rcave 4)",
    8: "‡∏≠‡∏±‡∏®‡∏ß‡∏¥‡∏ô‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¥‡∏ô‡∏≤‡∏® (Ruined Knight)",
    9: "‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏¢‡πÑ‡∏ü‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏ç (Tandallon)"
}

# -------- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™ --------
@bot.tree.command(name="set_boss_channel", description="‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™")
async def set_boss_channel(interaction: discord.Interaction, channel: discord.TextChannel):
    guild_id = interaction.guild_id
    boss_alert_channels[guild_id] = channel.id
    await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™‡πÄ‡∏õ‡πá‡∏ô {channel.mention} ‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)

# -------- ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™ --------
class BossView(discord.ui.View):
    def __init__(self, boss_name, alert_time, role, owner):
        super().__init__(timeout=30)
        self.boss_name = boss_name
        self.alert_time = alert_time
        self.role = role
        self.owner = owner

    @discord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", style=discord.ButtonStyle.green)
    async def confirm(self, interaction: discord.Interaction, button: discord.ui.Button):
        boss_timers.append((self.boss_name, self.alert_time, self.role, self.owner))
        await interaction.response.edit_message(content=f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ {self.boss_name} {self.alert_time.strftime('%H:%M')} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!", view=None)

@bot.tree.command(name="boss_set", description="‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™")
@app_commands.describe(boss="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™", time="‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤ (HH:MM)", role="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏®‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡πá‡∏Å", owner="‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏™ (knight/bishop)")
async def boss_set(interaction: discord.Interaction, boss: str, time: str, role: discord.Role, owner: str):
    if owner.lower() not in ["knight", "bishop"]:
        await interaction.response.send_message("‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏™‡πÄ‡∏õ‡πá‡∏ô knight ‡∏´‡∏£‡∏∑‡∏≠ bishop", ephemeral=True)
        return
    try:
        user_time = datetime.strptime(time, "%H:%M")
        view = BossView(boss, user_time, role, owner)
        await interaction.response.send_message(f"‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ {boss} ({owner}) ‡∏ó‡∏µ‡πà {user_time.strftime('%H:%M')} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?", view=view)
    except ValueError:
        await interaction.response.send_message("‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö HH:MM", ephemeral=True)

@tasks.loop(seconds=30)
async def check_boss_timers():
    now = datetime.now()
    for boss, alert_time, role, owner in boss_timers[:]:
        time_diff = (alert_time - now).total_seconds()
        if 300 <= time_diff < 330:
            await send_boss_alert(boss, role, owner, "üì¢ ‡∏≠‡∏µ‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏ö‡∏≠‡∏™‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î!")
        elif 0 <= time_diff < 30:
            await send_boss_alert(boss, role, owner, "‚öîÔ∏è ‡∏ö‡∏≠‡∏™‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß!")
            boss_timers.remove((boss, alert_time, role, owner))

async def send_boss_alert(boss, role, owner, message):
    guild_id = role.guild.id
    channel_id = boss_alert_channels.get(guild_id)
    if channel_id:
        channel = bot.get_channel(channel_id)
        if channel:
            embed = discord.Embed(title=f"‡∏ö‡∏≠‡∏™: {boss} ({owner})", description=f"üïí ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î: {datetime.now().strftime('%H:%M')}", color=discord.Color.red())
            embed.add_field(name="‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", value=message, inline=False)
            await channel.send(content=role.mention, embed=embed)

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á sync command ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö Slash Commands
@bot.command()
async def sync(ctx):
    await bot.tree.sync()
    await ctx.send("‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á slash ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢
@bot.tree.command(name='hellbot', description='Replies with hello')
async def hellobot(interaction: discord.Interaction):
    await interaction.response.defer(ephemeral=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ defer
    await interaction.followup.send('Hello! It‚Äôs me, Bot DISCORD')

@bot.event
async def on_ready():
    print("‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏¥‡∏á‡∏Ñ‡πå Slash Commands...")
    try:
        synced = await bot.tree.sync()
        print(f"{len(synced)} command(s) synced successfully!")
    except Exception as e:
        print(f"‚ùå Error syncing commands: {e}")

    check_boss_timers.start()

server_on()

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
TOKEN = os.getenv('TOKEN')
if not TOKEN:
    print("‚ùå Error: TOKEN ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô environment variables!")
else:
    bot.run(TOKEN)
