import os
import discord
from discord.ext import commands, tasks
from discord import app_commands
from datetime import datetime, timedelta

from myserver import server_on

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î prefix ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
intents = discord.Intents.default()
bot = commands.Bot(command_prefix='!', intents=discord.Intents.all())

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏™‡∏ñ‡∏≤‡∏ß‡∏£
boss_timers = []
broadcast_channels = {}
boss_alert_channels = {}  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå

# ‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏™
boss_list = {
    1: "‡∏ä‡∏±‡πâ‡∏ô‡∏•‡πà‡∏≤‡∏á ‡πÇ‡∏Æ‡∏ó‡∏π‡∏£‡πà‡∏≤ (Hotura)",
    2: "‡∏ñ‡πâ‡∏≥ 7 ‡∏ó‡∏¥‡∏Å‡∏î‡∏±‡∏•‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡πà‡∏á (Cave 7)",
    3: "‡∏ñ‡πâ‡∏≥ 8 ‡∏Å‡∏±‡∏ó‡∏ü‡∏¥‡∏•‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏£‡πâ‡∏≤‡∏¢ (Cave 8)",
    4: "‡∏ñ‡πâ‡∏≥ 9 ‡πÅ‡∏û‡∏ô‡πÄ‡∏î‡∏≠‡πÄ‡∏£‡∏õ‡∏•‡∏∏‡∏Å‡∏û‡∏•‡∏±‡∏á (Cave 9)",
    5: "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà 2 ‡∏Æ‡∏≤‡∏Ñ‡∏µ‡∏£‡πå (Rcave 2)",
    6: "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà 3 ‡∏î‡∏≤‡∏°‡∏¥‡πÇ‡∏£‡∏™ (Rcave 3)",
    7: "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà 4 ‡∏Ñ‡∏≤‡∏ü‡∏Ñ‡∏≤ (Rcave 4)",
    8: "‡∏≠‡∏±‡∏®‡∏ß‡∏¥‡∏ô‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¥‡∏ô‡∏≤‡∏® (Ruined Knight)",
    9: "‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏¢‡πÑ‡∏ü‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏ç (Tandallon)"
}

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
@bot.event
async def on_ready():
    print("Bot Online!")
    try:
        synced = await bot.tree.sync()
        print(f"Synced {len(synced)} command(s)")
    except Exception as e:
        print(f"Error syncing commands: {e}")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á slash ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢
@bot.tree.command(name='hellbot', description='Replies with hello')
async def hellobot(interaction: discord.Interaction):
    await interaction.response.defer(ephemeral=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ defer
    await interaction.followup.send('Hello! It‚Äôs me, Bot DISCORD')

# -------- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™ --------
@bot.tree.command(name="set_boss_channel", description="‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™")
async def set_boss_channel(interaction: discord.Interaction, channel: discord.TextChannel):
    guild_id = interaction.guild_id
    boss_alert_channels[guild_id] = channel.id
    await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™‡πÄ‡∏õ‡πá‡∏ô {channel.mention} ‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)

# -------- ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™ --------
class BossView(discord.ui.View):
    def __init__(self, boss_name, alert_time, role, owner):
        super().__init__(timeout=30)
        self.boss_name = boss_name
        self.alert_time = alert_time
        self.role = role
        self.owner = owner

    @discord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", style=discord.ButtonStyle.green)
    async def confirm(self, interaction: discord.Interaction, button: discord.ui.Button):
        boss_timers.append((self.boss_name, self.alert_time, self.role, self.owner))
        await interaction.response.edit_message(content=f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ {self.boss_name} {self.alert_time.strftime('%H:%M')} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!", view=None)

@bot.tree.command(name="boss_set", description="‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™")
@app_commands.describe(boss="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏™", time="‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤ (HH:MM)", role="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏®‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡πá‡∏Å", owner="‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏™ (knight/bishop)")
async def boss_set(interaction: discord.Interaction, boss: str, time: str, role: discord.Role, owner: str):
    if owner.lower() not in ["knight", "bishop"]:
        await interaction.response.send_message("‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏™‡πÄ‡∏õ‡πá‡∏ô knight ‡∏´‡∏£‡∏∑‡∏≠ bishop", ephemeral=True)
        return
    try:
        user_time = datetime.strptime(time, "%H:%M")
        view = BossView(boss, user_time, role, owner)
        await interaction.response.send_message(f"‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ {boss} ({owner}) ‡∏ó‡∏µ‡πà {user_time.strftime('%H:%M')} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?", view=view)
    except ValueError:
        await interaction.response.send_message("‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö HH:MM", ephemeral=True)

@tasks.loop(seconds=30)
async def check_boss_timers():
    now = datetime.now()
    for boss, alert_time, role, owner in boss_timers[:]:
        time_diff = (alert_time - now).total_seconds()
        if 300 <= time_diff < 330:
            await send_boss_alert(boss, role, owner, "üì¢ ‡∏≠‡∏µ‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏ö‡∏≠‡∏™‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î!")
        elif 0 <= time_diff < 30:
            await send_boss_alert(boss, role, owner, "‚öîÔ∏è ‡∏ö‡∏≠‡∏™‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß!")
            boss_timers.remove((boss, alert_time, role, owner))

async def send_boss_alert(boss, role, owner, message):
    guild_id = role.guild.id
    channel_id = boss_alert_channels.get(guild_id)
    if channel_id:
        channel = bot.get_channel(channel_id)
        if channel:
            embed = discord.Embed(title=f"‡∏ö‡∏≠‡∏™: {boss} ({owner})", description=f"üïí ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î: {datetime.now().strftime('%H:%M')}", color=discord.Color.red())
            embed.add_field(name="‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", value=message, inline=False)
            await channel.send(content=role.mention, embed=embed)

# -------- ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á slash ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå --------
@bot.tree.command(name='add_channel', description='‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå')
async def add_channel(interaction: discord.Interaction, channel: discord.TextChannel):
    await interaction.response.defer(ephemeral=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ defer
    guild_id = interaction.guild_id
    if guild_id not in broadcast_channels:
        broadcast_channels[guild_id] = []

    if channel.id not in broadcast_channels[guild_id]:
        broadcast_channels[guild_id].append(channel.id)
        await interaction.followup.send(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á {channel.name} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!",
                                        ephemeral=True)
    else:
        await interaction.followup.send(f"‡∏´‡πâ‡∏≠‡∏á {channel.name} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)


# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á slash ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå
@bot.tree.command(name='remove_channel', description='‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå')
async def remove_channel(interaction: discord.Interaction, channel: discord.TextChannel):
    await interaction.response.defer(ephemeral=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ defer
    guild_id = interaction.guild_id
    if guild_id in broadcast_channels and channel.id in broadcast_channels[guild_id]:
        broadcast_channels[guild_id].remove(channel.id)
        await interaction.followup.send(f"‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á {channel.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
    else:
        await interaction.followup.send(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á {channel.name} ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå", ephemeral=True)


# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á slash ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡πÅ‡∏û‡∏ó‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô
@bot.tree.command(name='pattern_broadcast', description='‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡πÅ‡∏û‡∏ó‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô')
@app_commands.describe(week="‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå")
@app_commands.describe(boss_id="‡∏£‡∏´‡∏±‡∏™‡∏ö‡∏≠‡∏™ (1-8)")
@app_commands.describe(date="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡πÄ‡∏ä‡πà‡∏ô 25/10/24)")
@app_commands.describe(time="‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå (‡πÄ‡∏ä‡πà‡∏ô 18:00)")

async def pattern_broadcast(interaction: discord.Interaction, week: int, boss_id: int, date: str, time: str):
    await interaction.response.defer(ephemeral=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ defer
    if boss_id in boss_list:
        boss_name = boss_list[boss_id]
        message = f"Week {week}: {boss_name} {date} {time}"

        guild_id = interaction.guild_id
        if guild_id in broadcast_channels:
            for channel_id in broadcast_channels[guild_id]:
                channel = bot.get_channel(channel_id)
                if channel:
                    await channel.send(message)
            await interaction.followup.send("‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡πÅ‡∏û‡∏ó‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)
        else:
            await interaction.followup.send("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå", ephemeral=True)
    else:
        await interaction.followup.send("‡∏£‡∏´‡∏±‡∏™‡∏ö‡∏≠‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà", ephemeral=True)

@bot.event
async def on_ready():
    print("‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå!")
    check_boss_timers.start()

server_on()

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
bot.run(os.getenv('TOKEN'))
