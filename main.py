import os
import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import View, Button
import datetime
import asyncio
import pytz

from discord.ui import Modal, Select, TextInput, View
from myserver import server_on
from enum import Enum

bot = commands.Bot(command_prefix='!', intents=discord.Intents.all())
tree = bot.tree
local_tz = pytz.timezone('Asia/Bangkok')  # ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢
# ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏™‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô + ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
boss_notifications = {}  # {guild_id: [{"boss_name": "..", "spawn_time": datetime, "owner": ".."}]} ‚úÖ
boss_roles = {}  # {guild_id: role_id}  # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡πá‡∏Å Role ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ô‡∏Å‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® ‚úÖ
admin_roles = {}  # {guild_id: role_name}
update_log_channels = {}  # {guild_id: channel_id}
guild_active_roles = {}  # {guild_id: {guild_name: role_id}}
broadcast_channels = {} # ‚úÖ
boss_channels = {}  # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ channel_id ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ‚úÖ
role_notifications = {} # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• role ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏ó‡πá‡∏Å‡∏ï‡∏≠‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™ ‚úÖ

# -------------------------------------------------------
@bot.event
async def on_ready():
    print("Bot Online!")
    try:
        synced = await bot.tree.sync()
        print(f"‚úÖ Synced {len(synced)} commands")
    except Exception as e:
        print(f"‚ùå Error syncing commands: {e}")
# -------------------------------------------------------

# ----------- ‡∏î‡∏π‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå *‡∏°‡∏µ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó* ‚úÖ-----------
@bot.tree.command(name="view_setting", description="‡∏î‡∏π‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô")
async def view_setting(interaction: discord.Interaction):
    guild_id = interaction.guild_id
    role_id = boss_roles.get(guild_id)

    role_display = f"<@&{role_id}>" if role_id else "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤" # ‚úÖ
    boss_channel_id = boss_channels.get(guild_id, "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤") # ‚úÖ
    broadcast_channel_id = broadcast_channels.get(guild_id, "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤") # ‚úÖ
    admin_role_name = admin_roles.get(guild_id, "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤")
    update_log_channel_id = update_log_channels.get(guild_id)
    update_log_channel_display = f"<#{update_log_channel_id}>" if update_log_channel_id else "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"
    active_guilds = guild_active_roles.get(guild_id, {})
    active_guilds_display = "\n".join([f"üîπ {name}: <@&{rid}>" for name, rid in active_guilds.items()]) if active_guilds else "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"

    embed = discord.Embed(title="üîß ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", color=discord.Color.blue())
    embed.add_field(name="üîî Role Notification", value=role_display, inline=False) # ‚úÖ
    embed.add_field(name="üì¢ Boss Notification Channel", value=f"<#{boss_channel_id}>", inline=False) # ‚úÖ
    embed.add_field(name="üì° Broadcast Channel", value=f"[{broadcast_channel_id}]", inline=False) # ‚úÖ
    embed.add_field(name="üõ†Ô∏è Admin Role", value=admin_role_name, inline=False)
    embed.add_field(name="üìù Update Log Channel", value=update_log_channel_display, inline=False)
    embed.add_field(name="üè∞ Active Guilds", value=active_guilds_display, inline=False)

    await interaction.response.send_message(embed=embed, ephemeral=True)
    print(f"[DEBUG] view_setting for guild {guild_id}")

# ----------- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ö‡∏≠‡∏™‡πÄ‡∏õ‡πá‡∏ô Enum ‚úÖ-----------
class BossName(Enum):
    HOTURA = "Lower Cave"
    CAVE_7 = "Cave 7"
    CAVE_8 = "Cave 8"
    CAVE_9 = "Cave 9"
    RCAVE_2 = "Rcave 2"
    RCAVE_3 = "Rcave 3"
    RCAVE_4 = "Rcave 4"
    RUINED_KNIGHT = "Ruined Knight"
    TANDALLON = "Tandallon"
    DEFGIO = "Dergio"

    @classmethod
    def from_value(cls, value):
        for boss in cls:
            if boss.value == value:
                return boss
        return None

# ----------- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå ‚úÖ-----------
@bot.tree.command(name='add_channel', description='‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå')
async def add_channel(interaction: discord.Interaction, channel: discord.TextChannel):
    await interaction.response.defer(ephemeral=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ defer
    guild_id = interaction.guild_id
    if guild_id not in broadcast_channels:
        broadcast_channels[guild_id] = []

    if channel.id not in broadcast_channels[guild_id]:
        broadcast_channels[guild_id].append(channel.id)
        await interaction.followup.send(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á {channel.name} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!",
                                        ephemeral=True)
    else:
        await interaction.followup.send(f"‡∏´‡πâ‡∏≠‡∏á {channel.name} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)


# ----------- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå ‚úÖ-----------
@bot.tree.command(name='remove_channel', description='‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå')
async def remove_channel(interaction: discord.Interaction, channel: discord.TextChannel):
    await interaction.response.defer(ephemeral=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ defer
    guild_id = interaction.guild_id
    if guild_id in broadcast_channels and channel.id in broadcast_channels[guild_id]:
        broadcast_channels[guild_id].remove(channel.id)
        await interaction.followup.send(f"‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á {channel.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
    else:
        await interaction.followup.send(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á {channel.name} ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå", ephemeral=True)


# ----------- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ ‚úÖ-----------
@bot.tree.command(name='pattern_broadcast', description='‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡πÅ‡∏û‡∏ó‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô')
@app_commands.describe(
    boss_name="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏≠‡∏™‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
    date="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡πÄ‡∏ä‡πà‡∏ô 25/10/24)",
    time="‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏≠‡∏™‡πÄ‡∏Å‡∏¥‡∏î (‡πÄ‡∏ä‡πà‡∏ô 18:00)"
)

async def pattern_broadcast(interaction: discord.Interaction, boss_name: BossName, date: str, time: str):
    await interaction.response.defer(ephemeral=True)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ defer

    boss_display_name = boss_name.value  # ‚úÖ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á replace ‡πÅ‡∏•‡πâ‡∏ß
    message = f"### ‚ú¶ÔΩû ùêÅùê®ùê¨ùê¨Ôπï{boss_display_name} ùêÉùêöùê≠ùêûÔπï{date} {time} ÔΩû‚ú¶"

    guild_id = interaction.guild_id
    if guild_id in broadcast_channels:
        for channel_id in broadcast_channels[guild_id]:
            channel = bot.get_channel(channel_id)
            if channel:
                await channel.send(message)
        await interaction.followup.send("‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡πÅ‡∏û‡∏ó‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)
    else:
        await interaction.followup.send("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏Ñ‡∏™‡∏ï‡πå", ephemeral=True)

# ----------- ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö set_boss_channel -----------
class ConfirmView(View):
    def __init__(self, interaction, channel):
        super().__init__()
        self.interaction = interaction
        self.channel = channel

    @discord.ui.button(label="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", style=discord.ButtonStyle.green)
    async def confirm(self, interaction: discord.Interaction, button: Button):
        guild_id = self.interaction.guild_id
        boss_channels[guild_id] = self.channel.id
        await self.interaction.followup.send(f"‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á {self.channel.name} ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!",
                                             ephemeral=True)
        self.stop()

    @discord.ui.button(label="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style=discord.ButtonStyle.red)
    async def cancel(self, interaction: discord.Interaction, button: Button):
        await self.interaction.followup.send("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™", ephemeral=True)
        self.stop()

# ----------- ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏≠‡∏™ ‚úÖ -----------
@bot.tree.command(name='set_boss_channel', description='‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™')
async def set_boss_channel(interaction: discord.Interaction, channel: discord.TextChannel):
    guild_id = interaction.guild_id  # ‚úÖ ‡∏î‡∏∂‡∏á ID ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
    boss_channels[guild_id] = channel.id  # ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤ channel.id ‡∏ï‡∏≤‡∏° guild
    # ‚úÖ ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£ defer()
    await interaction.response.send_message(
        f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á {channel.mention} ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True
    )

# ----------- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Role ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÅ‡∏ó‡πá‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™ ‚úÖ-----------
@bot.tree.command(name="set_role_notification", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Role ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™")
async def set_role_notification(interaction: discord.Interaction, role: discord.Role):
    guild_id = interaction.guild_id
    boss_roles[guild_id] = role.id  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å role.id ‡∏•‡∏á dictionary

    await interaction.response.send_message(
        f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Role Notification ‡πÄ‡∏õ‡πá‡∏ô <@&{role.id}> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!",
        ephemeral=True
    )

    print(f"[DEBUG] boss_roles: {boss_roles}")

# ----------- ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏≠‡∏™ ‚úÖ-----------
class OwnerType(Enum):
    KNIGHT = "knight"
    BISHOP = "bishop"

@tree.command(name='boss_set_notification', description='‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™')
async def boss_set_notification(
        interaction: discord.Interaction,
        boss_name: BossName,
        hours: int,
        minutes: int,
        owner: OwnerType,
        role: discord.Role = None  # ‡∏ó‡∏≥‡πÉ‡∏´‡πâ role ‡πÄ‡∏õ‡πá‡∏ô optional
):
    await interaction.response.defer(ephemeral=True)
    guild_id = interaction.guild_id

    # ‡πÉ‡∏ä‡πâ role ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤
    if role is None:
        role_id = boss_roles.get(guild_id)
        if role_id:
            role = interaction.guild.get_role(role_id)

    if role is None:  # ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ role ‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        return await interaction.followup.send("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Role ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™!", ephemeral=True)

    now = datetime.datetime.now(local_tz)  # ‚úÖ ‡πÉ‡∏ä‡πâ timezone ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    spawn_time = now + datetime.timedelta(hours=hours, minutes=minutes)

    if guild_id not in boss_notifications:
        boss_notifications[guild_id] = []

    boss_notifications[guild_id].append({
        "boss_name": boss_name.name,
        "spawn_time": spawn_time,
        "owner": owner.value,
        "role": role.id  # ‡πÉ‡∏ä‡πâ role ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤
    })

    await interaction.followup.send(
        f"‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™ {boss_name.value} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å {hours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á {minutes} ‡∏ô‡∏≤‡∏ó‡∏µ.",
        ephemeral=True
    )

    await schedule_boss_notifications(guild_id, boss_name.name, spawn_time, owner.value, role)

# ----------- ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏≠‡∏™ ‚úÖ-----------
async def schedule_boss_notifications(guild_id, boss_name, spawn_time, owner, role):

    now = datetime.datetime.now(local_tz)

    # ‡∏Å‡∏£‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏™‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏î
    valid_notifications = [
        notif for notif in boss_notifications[guild_id]
        if notif["spawn_time"] > now
    ]

    time_until_spawn = (spawn_time - now).total_seconds()
    time_before_five_min = max(time_until_spawn - 300, 0)
    owner_icon = "üíô" if owner == "knight" else "üíö"

    boss_display_name = BossName[boss_name].value

    print(f"[DEBUG] Scheduling boss: {boss_name} at {spawn_time} (in {time_until_spawn}s)")

    if time_before_five_min > 0: # ‡∏£‡∏≠ 5 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏≠‡∏™‡πÄ‡∏Å‡∏¥‡∏î
        await asyncio.sleep(time_before_five_min)

    if guild_id in boss_channels:
        channel_id = boss_channels[guild_id]
        channel = bot.get_channel(channel_id) or bot.get_channel(int(channel_id))
        if channel:
            embed = discord.Embed(
                title="ùêÅùê®ùê¨ùê¨ ùêçùê®ùê≠ùê¢ùêüùê¢ùêúùêöùê≠ùê¢ùê®ùêß!!",
                description=f"{owner_icon} ùêÅùê®ùê¨ùê¨ {boss_display_name} ùê¢ùê¨ ùê¨ùê©ùêöùê∞ùêßùê¢ùêßùê† ùê¢ùêß ùüì ùê¶ùê¢ùêßùêÆùê≠ùêûùê¨! <@&{role.id}>",
                color=discord.Color.yellow()
            )
            await channel.send(embed=embed)

    await asyncio.sleep(300)  # ‡∏£‡∏≠‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏≠‡∏™‡πÄ‡∏Å‡∏¥‡∏î
    if guild_id in boss_channels:
        channel_id = boss_channels[guild_id]
        channel = bot.get_channel(channel_id) or bot.get_channel(int(channel_id))
        if channel:
            embed = discord.Embed(
                title="ùêÅùê®ùê¨ùê¨ ùê°ùêöùê¨ ùê¨ùê©ùêöùê∞ùêß!!",
                description=f"{owner_icon} ùêÅùê®ùê¨ùê¨ {boss_display_name} ùê°ùêöùê¨ ùêíùê©ùêöùê∞ùêß ùêãùêûùê≠'ùê¨ ùêüùê¢ùê†ùê°ùê≠! <@&{role.id}>",
                color=discord.Color.red()
            )
            await channel.send(embed=embed)

local_tz = pytz.timezone("Asia/Bangkok")  # ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ó‡∏¢

# ----------- ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏™‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ ‚úÖ-----------
@bot.tree.command(name="boss_notification_list", description="‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏™‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô")
async def boss_notification_list(interaction: discord.Interaction):
    await interaction.response.defer(thinking=True)  # ‡∏•‡∏î‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£ defer

    guild_id = interaction.guild_id
    if guild_id not in boss_notifications or not boss_notifications[guild_id]:
        return await interaction.followup.send("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏≠‡∏™‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", ephemeral=True)

    now = datetime.datetime.now(local_tz)

    # ‡∏Å‡∏£‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏™‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏î
    valid_notifications = [
        notif for notif in boss_notifications[guild_id]
        if notif["spawn_time"] > now
    ]

    if not valid_notifications:
        return await interaction.followup.send("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏≠‡∏™‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", ephemeral=True)

    sorted_notifications = sorted(valid_notifications, key=lambda x: x["spawn_time"])

    embed = discord.Embed(title="üìú ùêÅùê®ùê¨ùê¨ ùêíùê©ùêöùê∞ùêß ùêãùê¢ùê¨ùê≠", color=discord.Color.blue())

    for idx, notif in enumerate(sorted_notifications[:10], start=1):  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        boss_name = notif["boss_name"].replace("_", " ")
        spawn_time = notif["spawn_time"].astimezone(local_tz).strftime("%H:%M")
        owner = notif["owner"]
        embed.add_field(name=f"{idx}. ùêÅùê®ùê¨ùê¨ Ôπï{boss_name} ùêéùê∞ùêßùêûùê´ Ôπï{owner}",
                        value=f"ùêíùê©ùêöùê∞ùêß Ôπï{spawn_time}",
                        inline=False)

    await interaction.followup.send(embed=embed, ephemeral=True)

    # ‚úÖ ‡∏õ‡∏∏‡πà‡∏° "‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®"
    class ConfirmView(discord.ui.View):
        def __init__(self, embed):
            super().__init__(timeout=60)
            self.embed = embed  # ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö Embed ‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏õ‡∏∏‡πà‡∏°

        @discord.ui.button(label="üì¢ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®", style=discord.ButtonStyle.green)
        async def announce(self, interaction: discord.Interaction, button: discord.ui.Button):
            await interaction.response.defer()

            guild_id = interaction.guild_id
            channel_id = boss_channels.get(guild_id)

            if not channel_id:
                return await interaction.followup.send("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ö‡∏≠‡∏™!", ephemeral=True)

            channel = interaction.guild.get_channel(channel_id)
            if not channel:
                return await interaction.followup.send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô!", ephemeral=True)

            # ‚úÖ ‡∏î‡∏∂‡∏á Role ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏Å
            role_id = boss_roles.get(guild_id)
            role_mention = f"<@&{role_id}>" if role_id else "@everyone"

            await channel.send(f"üì¢ **„Äêùêìùê¢ùê¶ùêû ùê¢ùêß ùê†ùêöùê¶ùêû + ùüèùê°ùê´„Äë** {role_mention}", embed=self.embed)
            await interaction.followup.send("‚úÖ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!", ephemeral=True)

    await interaction.followup.send(embed=embed, ephemeral=True, view=ConfirmView(embed))  # ‚úÖ ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°
# -------------------- ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß --------------------

# üîπ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ
class JobChoicesEnum(discord.Enum):
    SNIPER = "Sniper"
    CLERIC = "Cleric"
    MAGE = "Mage"
    ASSASSIN = "Assassin"
    IMPALER = "Impaler"
    KNIGHT = "Knight"
    GENERAL = "General"
    SLAYER = "Slayer"

class GuildRoleManager:
    def __init__(self):
        self.guild_roles = {}

    def set_guild_roles(self, roles):
        self.guild_roles = roles

    def remove_guild_role(self, guild_name):
        if guild_name in self.guild_roles:
            del self.guild_roles[guild_name]

    def get_role_id(self, guild_name):
        return self.guild_roles.get(guild_name)

guild_role_manager = GuildRoleManager()
admin_role_name = None  # Initially unset
update_log_channel_id = None  # Initially unset

# ----------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πåupdate -----------
@bot.tree.command(name="update_info_post", description="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
async def update_info_post(interaction: discord.Interaction, channel: discord.TextChannel):
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå
    embed = discord.Embed(
        title="üõ†Ô∏è ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        description="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á:\n"
                    "- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ä‡∏∑‡πà‡∏≠\n"
                    "- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏≠‡∏≤‡∏ä‡∏µ‡∏û\n"
                    "- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏¥‡∏•‡∏î‡πå\n\n"
                    "‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠",
        color=discord.Color.blue(),
    )

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á View ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°
    view = UpdateInfoView()

    # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    await channel.send(embed=embed, view=view)
    await interaction.response.send_message(f"‚úÖ ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ô {channel.mention}", ephemeral=True)

# ----------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏° -----------
class UpdateInfoView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(UpdateButton("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ä‡∏∑‡πà‡∏≠", "name"))
        self.add_item(UpdateButton("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏≠‡∏≤‡∏ä‡∏µ‡∏û", "job"))
        self.add_item(UpdateButton("‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏¥‡∏•‡∏î‡πå", "guild"))


class UpdateButton(discord.ui.Button):
    def __init__(self, label, update_type):
        super().__init__(label=label, style=discord.ButtonStyle.primary)
        self.update_type = update_type

    async def callback(self, interaction: discord.Interaction):
        await interaction.response.send_modal(UpdateModal(self.update_type))


class UpdateModal(discord.ui.Modal, title="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó"):
    def __init__(self, update_type):
        super().__init__()
        self.update_type = update_type
        self.member_id = discord.ui.TextInput(label="‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (5 ‡∏´‡∏•‡∏±‡∏Å)", required=True, max_length=5)
        self.old_data = discord.ui.TextInput(label="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°", required=True)
        self.new_data = discord.ui.TextInput(label="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà", required=True)
        self.add_item(self.member_id)
        self.add_item(self.old_data)
        self.add_item(self.new_data)

    async def on_submit(self, interaction: discord.Interaction):
        # Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á update log
        embed = discord.Embed(
            title="üìù ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            description=f"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: {self.update_type}\n"
                        f"‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: {self.member_id.value}\n"
                        f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°: {self.old_data.value}\n"
                        f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà: {self.new_data.value}",
            color=discord.Color.yellow(),
        )
        embed.set_footer(text="‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô")

        # ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
        view = AdminConfirmView(update_type=self.update_type, modal_data={
            "member_id": self.member_id.value,
            "old_data": self.old_data.value,
            "new_data": self.new_data.value,
        })

        # ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á update log
        log_channel = interaction.guild.get_channel(update_log_channel_id)
        await log_channel.send(embed=embed, view=view)
        await interaction.response.send_message("‚úÖ ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

# ----------- ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠ -----------
class AdminConfirmView(discord.ui.View):
    def __init__(self, update_type, modal_data):
        super().__init__(timeout=None)
        self.update_type = update_type
        self.modal_data = modal_data
        self.add_item(AdminConfirmButton("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", True, self.update_type, self.modal_data))
        self.add_item(AdminConfirmButton("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", False, self.update_type, self.modal_data))


class AdminConfirmButton(discord.ui.Button):
    def __init__(self, label, confirm, update_type, modal_data):
        style = discord.ButtonStyle.success if confirm else discord.ButtonStyle.danger
        super().__init__(label=label, style=style)
        self.confirm = confirm
        self.update_type = update_type
        self.modal_data = modal_data

    async def callback(self, interaction: discord.Interaction):
        if "Admin" not in [role.name for role in interaction.user.roles]:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ", ephemeral=True)
            return

        if self.confirm:
            # ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
            if self.update_type == "name":
                member = interaction.guild.get_member_named(f"{self.modal_data['member_id']} - {self.modal_data['old_data']}")
                if member:
                    await member.edit(nick=f"{self.modal_data['member_id']} - {self.modal_data['new_data']}")
                    await interaction.message.edit(content="‚úÖ ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", view=None)

            elif self.update_type == "guild":
                member = interaction.guild.get_member_named(f"{self.modal_data['member_id']} - {self.modal_data['old_data']}")
                if member:
                    old_role = discord.utils.get(interaction.guild.roles, name=self.modal_data['old_data'])
                    new_role = discord.utils.get(interaction.guild.roles, name=self.modal_data['new_data'])
                    if old_role:
                        await member.remove_roles(old_role)
                    if new_role:
                        await member.add_roles(new_role)
                    await interaction.message.edit(content="‚úÖ ‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", view=None)

        else:
            await interaction.message.edit(content="‚ùå ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", view=None)

# ----------- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏•‡∏∞ Role -----------
update_log_channel_id = None  # ‡πÄ‡∏Å‡πá‡∏ö ID ‡∏´‡πâ‡∏≠‡∏á update log
admin_role_name = "Admin"  # ‡∏ä‡∏∑‡πà‡∏≠ Role ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô

@bot.tree.command(name="set_update_log_channel", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á update log")
async def set_update_log_channel(interaction: discord.Interaction, channel: discord.TextChannel):
    global update_log_channel_id
    update_log_channel_id = channel.id
    await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á update log ‡πÄ‡∏õ‡πá‡∏ô {channel.mention} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", ephemeral=True)
# -----------
@bot.tree.command(name="set_admin_role", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Role ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô")
async def set_admin_role(interaction: discord.Interaction, role: discord.Role):
    global admin_role_name
    admin_role_name = role.name
    await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Role ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô {role.mention} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", ephemeral=True)

# ----------- ‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï -----------
@bot.tree.command(name="update_info_post", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
async def update_info_post(interaction: discord.Interaction, title: str, description: str):
    embed = discord.Embed(
        title=title,
        description=description,
        color=discord.Color.blurple()
    )
    view = UpdateInfoView(interaction.guild_id)
    await interaction.response.send_message(embed=embed, view=view)

# ----------- ‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï -----------
@bot.tree.command(name="set_update_log_channel", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó")
async def set_update_log_channel(interaction: discord.Interaction, channel: discord.TextChannel):
    guild_id = interaction.guild_id
    update_log_channels[guild_id] = channel.id  # ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤ ID ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó
    await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏õ‡πá‡∏ô {channel.mention}", ephemeral=True)

# ----------- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏¢‡∏®‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô -----------
@bot.tree.command(name="set_guild_active", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Role ‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
async def set_guild_active(interaction: discord.Interaction, guild_name: str, role: discord.Role):
    guild_id = interaction.guild_id

    if guild_id not in guild_active_roles:
        guild_active_roles[guild_id] = {}

    guild_active_roles[guild_id][guild_name] = role.id  # ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á Role ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Dictionary
    await interaction.response.send_message(
        f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Role **{role.name}** ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏•‡∏î‡πå **{guild_name}** ‡πÅ‡∏•‡πâ‡∏ß!",
        ephemeral=True
    )
    
# ----------- ‡∏•‡∏ö‡∏¢‡∏®‡∏ó‡∏µ‡πà‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô -----------
@bot.tree.command(name="remove_guild_active", description="Remove a guild from active selection")
async def remove_guild_active(interaction: discord.Interaction, guild_name: str):
    if guild_name in guild_role_manager.guild_roles:
        guild_role_manager.remove_guild_role(guild_name)
        await interaction.response.send_message(f"‚úÖ ‡∏•‡∏ö‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß: {guild_name}", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö.", ephemeral=True)

# ----------- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏¢‡∏®‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô -----------
@bot.tree.command(name="set_admin_role", description="‡∏ï‡∏±‡πâ‡∏á‡∏¢‡∏®‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó")
async def set_admin_role(interaction: discord.Interaction, role: discord.Role):
    guild_id = interaction.guild_id
    admin_roles[guild_id] = role.name

    await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á {role.name} ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

server_on()

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
bot.run(os.getenv('TOKEN'))
